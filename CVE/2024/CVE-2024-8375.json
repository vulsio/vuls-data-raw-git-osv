{
	"schema_version": "1.6.0",
	"id": "CVE-2024-8375",
	"modified": "2024-10-07T23:30:57Z",
	"published": "2024-09-19T16:15:06Z",
	"aliases": [
		"GHSA-w69q-w4h4-2fx8"
	],
	"details": "There exists a use after free vulnerability in Reverb. Reverb supports the VARIANT datatype, which is supposed to represent an arbitrary object in C++. When a tensor proto of type VARIANT is unpacked, memory is first allocated to store the entire tensor, and a ctor is called on each instance. Afterwards, Reverb copies the content in tensor_content to the previously mentioned pre-allocated memory, which results in the bytes in tensor_content overwriting the vtable pointers of all the objects which were previously allocated. Reverb exposes 2 relevant gRPC endpoints: InsertStream and SampleStream. The attacker can insert this stream into the server’s database, then when the client next calls SampleStream they will unpack the tensor into RAM, and when any method on that object is called (including its destructor) the attacker gains control of the Program Counter. We recommend upgrading past git commit  https://github.com/google-deepmind/reverb/commit/6a0dcf4c9e842b7f999912f792aaa6f6bd261a25",
	"affected": [
		{
			"package": {},
			"ranges": [
				{
					"type": "GIT",
					"repo": "https://github.com/google-deepmind/reverb",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6a0dcf4c9e842b7f999912f792aaa6f6bd261a25"
						}
					]
				}
			],
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-8375.json"
			}
		}
	],
	"references": [
		{
			"type": "FIX",
			"url": "https://github.com/google-deepmind/reverb/commit/6a0dcf4c9e842b7f999912f792aaa6f6bd261a25"
		},
		{
			"type": "REPORT",
			"url": "https://github.com/google-deepmind/reverb/issues/141"
		}
	]
}
